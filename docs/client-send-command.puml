@startuml
hide footbox

participant "Parent\nNode" as parentNode
box internal events
    participant "Containment\nSingle\nEvent\nEmitter" as emitter
    participant "Partition\nEvent\nHandler" as commander
end box
box delta #lightblue
    participant "Partition\nEvent\nReplicator" as replicator
    database "Shared\nNode\nMap" as sharedNodeMap
    participant "LionWeb\nClient" as client
    participant "IClient\nConnector" as connector
end box

[-> parentNode++: SetContainment()
    parentNode -> emitter ++: RaiseEvent()
        emitter -> commander ++: CreateEventId()
            commander -> commander: create new
        return
        emitter -> commander ++: Raise()
            commander -> commander ++: writeHandler
                commander -> replicator ++: LocalHandler
                    replicator -> replicator ++: OnLocal\n  ChildAdded()
                        replicator -> sharedNodeMap: RegisterNode()\nnewChild
                    return
                return
                replicator -> replicator ++: forwardingHandler
                    replicator -> replicator ++: Filter()
                        replicator -> replicator: checkRegistered\nEventIds()\n<-- true
                    return
                    replicator -> client ++: SendPartition\n  EventToRepository()
                        client -> client ++: Send()
                            client -> client: StoreOwn\n  CommandId()
                            client ->> connector: Send()
                        return
                    return
                return 
            return
        return
    return
return

connector -> client ++: Receive(ChildAdded)
    client -> client ++: ReceiveEvent()
        client -> client: CheckEvent\n  SequenceNumber()\n  <-- true
        client -> client ++: ProcessEvent()
            client -> client: IncrementEvent\n  SequenceNumber()
            client -> client ++: CheckOwnEvent()
                client -> client: Compare\n  ParticipationId()
                client -> client: CheckOwn\n  CommandIds()
            return true
        return
        client -> client: CheckUnprocessed\n  Events()\n  <-- false
    return
return

@enduml