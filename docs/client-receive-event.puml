@startuml
hide footbox

box delta #lightblue
    participant "IClient\nConnector" as connector
    participant "LionWeb\nClient" as client
    participant "Delta\nProtocol\nPartition\nEvent\nReceiver" as receiver
    participant "Partition\nEvent\nHandler" as eventHandler
    database "Shared\nNode\nMap" as sharedNodeMap
    participant "Partition\nEvent\nReplicator" as replicator
end box

participant "Parent\nNode" as localParent

box internal events
    participant "Partition\nEvent\nHandler\n-- local\nCommander" as localCommander
    participant "Containment\nSingle\nEvent\nEmitter" as emitter
end box

connector -> client ++: Receive\n  (ChildAdded)
    client -> client ++: ReceiveEvent()
        client -> client: CheckEvent\n  SequenceNumber()\n   <-- true
        client -> client ++: ProcessEvent()
            client -> client: IncrementEvent\n  SequenceNumber()
            client -> client ++: CheckOwnEvent()
                client -> client: CompareParticipationId()
                client -> client: CheckOwnCommandIds()
            return false
            client -> client ++: lock
                client -> receiver ++: Receive\n  (ChildAdded)
                    receiver -> eventHandler ++: Raise\n  (ChildAddedEvent)
                        eventHandler -> eventHandler ++: writeHandler
                            eventHandler -> replicator ++: ProcessEvent()
                                replicator -> replicator ++: OnRemote\n  ChildAdded()
                                    replicator -> replicator ++ #green: Suppress\n  EventForwarding()
                                        replicator -> localCommander ++: CreateEventId()
                                            localCommander -> localCommander: create new
                                        return
                                        replicator -> localCommander: RegisterEventId()
                                        replicator -> replicator: RegisterEventId() 
                                        replicator -> localParent ++: Set()
                                            localParent -> emitter ++: RaiseEvent()
                                                emitter -> localCommander ++: CreateEventId()
                                                    localCommander -> localCommander: use registered\n  eventId
                                                return
                                                emitter -> localCommander ++: Raise\n  (ChildAddedEvent)
                                                    localCommander -> localCommander ++: writeHandler
                                                        localCommander -> replicator ++: LocalHandler()
                                                            replicator -> replicator ++: OnLocal\n  ChildAdded()
                                                                replicator -> sharedNodeMap: RegisterNode\n  (newChild)
                                                                ' receiver: OnPartitionAdded()
                                                            return
                                                        return
                                                    return
                                                    localCommander -> replicator ++: forwardingHandler
                                                        replicator -> replicator ++: Filter()
                                                            replicator -> replicator: checkRegistered\nEventIds()\n<-- false
                                                        return null
                                                    return
                                                return
                                            return
                                        return
                                        replicator -> replicator: UnregisterEventId()
                                    return
                                return
                            return
                        return
                    return
                return
            return
        return
        client -> client: Check\n  UnprocessedEvents()\n  <-- false
    return
return

@enduml