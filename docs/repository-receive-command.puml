@startuml
hide footbox

box delta #lightblue
    participant "IRepository\nConnector" as connector
    participant "LionWeb\nRepository" as repo
    participant "Delta\nProtocol\nCommand\nReceiver" as receiver
    participant "Partition\nEvent\nHandler" as partitionEventHandler
    database "Shared\nNode\nMap" as sharedNodeMap
    participant "Rewrite\nPartition\nEvent\nReplicator" as replicator
end box

participant "Local\nParent\nNode" as localParent

box internal events
    participant "Partition\nEvent\nHandler\n-- local\nCommander" as localCommander
    participant "Containment\nSingle\nEvent\nEmitter" as emitter
end box

connector -> repo ++: Receive\n  (IMessageContext)
    repo -> receiver ++: Receive\n  (AddChild)
        receiver -> partitionEventHandler ++: Raise\n  (AddChild)
            partitionEventHandler -> replicator ++: ProcessEvent\n  (AddChild)
                replicator -> replicator ++: OnRemote\n  ChildAdded()
                    replicator -> replicator ++ #green: Suppress\n  EventForwarding()
                        replicator -> localCommander: RegisterEventId()
                        replicator -> replicator: RegisterEventId()
                        replicator -> localParent ++: Set()
                            localParent -> emitter ++: RaiseEvent()
                                emitter -> localCommander ++: CreateEventId()
                                    localCommander -> localCommander: use registered\n  eventId
                                return
                                emitter -> localCommander ++: Raise\n  (ChildAddedEvent)
                                    localCommander -> replicator ++: LocalHandler()
                                        replicator -> replicator ++: OnLocal\n  ChildAdded()
                                            replicator -> sharedNodeMap: RegisterNode\n  (newChild)
                                              ' receiver: OnPartitionAdded()
                                        return
                                    return
                                    localCommander -> replicator ++: forwardingHandler
                                        replicator -> replicator ++: Filter()
                                            replicator -> replicator: checkRegistered\nEventIds()\n<-- false
                                            replicator -> replicator: checkOriginal\n  EventIds()\n<-- true
                                        return registeredEvent
                                        replicator -> repo ++: SendPartitionEventToAllClients()
                                            repo ->> connector: SendAll()
                                        return
                                    return
                                return
                            return
                        return
                        replicator -> replicator: UnregisterEventId()
                    return
                return
            return
        return
    return
return


@enduml